// Code generated by sqlc. DO NOT EDIT.
// source: user.sql

package gen

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
insert into users (id) values ($1)
`

func (q *Queries) CreateUser(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, createUser, id)
	return err
}

const deleteUser = `-- name: DeleteUser :exec
delete from users where id = $1
`

func (q *Queries) DeleteUser(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteUser, id)
	return err
}

const getUser = `-- name: GetUser :one
select id, banned, followed from users where id = $1 limit 1
`

func (q *Queries) GetUser(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i User
	err := row.Scan(&i.ID, &i.Banned, &i.Followed)
	return i, err
}
